import sqlite3

from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

from queries import get_user_loc_names, get_all_categories, get_all_products


def generate_btn_send_contact():
    markup = ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    btn_send_contact = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç üì±",
                                      request_contact=True)
    markup.add(btn_send_contact)
    return markup


def generate_inline_yes_no():
    markup = InlineKeyboardMarkup(row_width=2)
    btn_yes = InlineKeyboardButton(text="–î–∞ ‚úÖ", callback_data="yes")
    btn_no = InlineKeyboardButton(text="–ù–µ—Ç ‚ùå", callback_data="no")
    markup.add(btn_yes, btn_no)
    return markup


def generate_mailing_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)

    btn_text = KeyboardButton(text="–¢–µ–∫—Å—Ç üìù")
    btn_image = KeyboardButton(text="–ö–∞—Ä—Ç–∏–Ω–∫–∞ üñº")
    btn_video = KeyboardButton(text="–í–∏–¥–µ–æ üéû")
    btn_image_text = KeyboardButton(text="–ö–∞—Ä—Ç–∏–Ω–∫–∞ üñº + –¢–µ–∫—Å—Ç üìù")
    btn_video_text = KeyboardButton(text="–í–∏–¥–µ–æ üéû + –¢–µ–∫—Å—Ç üìù")
    btn_back = KeyboardButton(text="–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é üîô")
    markup.row(btn_text, btn_image)
    markup.row(btn_video)
    markup.row(btn_image_text)
    markup.row(btn_video_text)
    markup.row(btn_back)

    return markup


def generate_yes_no():
    markup = ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    btn_yes = KeyboardButton(text="–î–∞ ‚úÖ")
    btn_no = KeyboardButton(text="–ù–µ—Ç ‚ùå")
    markup.add(btn_yes, btn_no)
    return markup


def generate_main_menu_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn_menu = KeyboardButton(text="–£–∫—Ä–∞—à–µ–Ω–∏—è üíé")
    btn_profile = KeyboardButton(text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—åüë§")
    btn_feedback = KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ ‚úç")
    # btn_back = KeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨Ö")
    markup.row(btn_menu)
    markup.row(btn_profile,btn_feedback)

    # markup.row(btn_back)
    return markup


def generate_location_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn_locations = KeyboardButton(text="–ú–æ–∏ –∞–¥—Ä–µ—Å–∞ üó∫")
    btn_send_location = KeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é üìç",
                                       request_location=True)
    btn_back = KeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨Ö")
    markup.row(btn_send_location)
    markup.row(btn_locations, btn_back)
    return markup


def generate_submit_location_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    btn_yes = KeyboardButton(text="–î–∞ ‚úÖ")
    btn_no = KeyboardButton(text="–ù–µ—Ç ‚ùå")
    btn_back = KeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨Ö")
    markup.row(btn_yes, btn_no)
    markup.row(btn_back)
    return markup


def generate_user_addresses(chat_id):
    addresses = get_user_loc_names(chat_id)
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    buttons = []
    for address in addresses:
        btn = KeyboardButton(text=f"{address}")
        buttons.append(btn)

    markup.add(*buttons)
    markup.add(KeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨Ö"))
    return markup


def generate_categories_buttons():
    categories = get_all_categories()
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = []
    for category in categories:
        btn = KeyboardButton(text=f"{category}")
        buttons.append(btn)

    markup.add(*buttons)

    markup.add(KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞ üõí'))
    markup.add(KeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨Ö"))
    return markup

def generate_products_buttons(category_name):
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = []
    products = get_all_products(category_name)
    for product in products:
        btn = KeyboardButton(text=f"{product}")
        buttons.append(btn)

    markup.add(*buttons)

    markup.add(KeyboardButton(text="–ù–∞–∑–∞–¥ ‚¨Ö"))
    return markup


def generate_profile_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    change_photo = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –ø—Ä–æ—Ñ–∏–ª—èüì∑''')
    change_f_n = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüë§''')
    change_phone_number = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±''')
    delete_profile = KeyboardButton(text=f'''–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è‚ùå''')
    back = KeyboardButton(text=f'''–ù–∞–∑–∞–¥ üîô''')
    markup.row(change_photo,change_f_n)
    markup.row(change_phone_number ,delete_profile)
    markup.row(back)
    return markup

def generate_admins_profile_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    change_photo = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∞–¥–º–∏–Ω–∞ üì∑''')
    change_f_n = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è –∞–¥–º–∏–Ω–∞ ü§¥''')
    change_phone_number = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∞–¥–º–∏–Ω–∞ üì± ''')
    delete_profile = KeyboardButton(text=f'''–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞ ‚ùå''')
    change_login = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏–∏—Ç—å –ª–æ–≥–∏–Ω ü§†''')
    change_pass = KeyboardButton(text=f'''–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å üîê''')
    back = KeyboardButton(text=f'''–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é üîô''')
    markup.row(change_photo,change_f_n,change_phone_number)
    markup.row(change_login, change_pass,delete_profile)
    markup.row(back)
    return markup

def generate_admin_buttons():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    mailing = KeyboardButton(text=f'''–†–∞—Å—Å—ã–ª–∫–∞ üìÆ''')
    how_many_users = KeyboardButton(text=f'''–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üë•''')
    profile_admin = KeyboardButton(text=f'''–ü—Ä–æ—Ñ–∏–ª—å –∞–¥–º–∏–Ω–∞ ü§¥''')
    markup.row(profile_admin)
    markup.row(mailing,how_many_users)
    return markup



def back():
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    back = KeyboardButton(text=f'''–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é üîô''')
    markup.row(back)
    return markup



def generate_pagination_buttons(product_id , quantity=1):
    markup = InlineKeyboardMarkup()
    btn_minus = InlineKeyboardButton(text='‚ûñ',
                                     callback_data=f'change_{product_id}_{quantity-1}')
    btn_plus = InlineKeyboardButton(text='‚ûï',
                                     callback_data=f'change_{product_id}_{quantity+1}')
    btn_quantity = InlineKeyboardButton(text=str(quantity), callback_data='quantity')
    add_to_cart = InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É üõí',
                                       callback_data=f'cart_{product_id}_{quantity}')

    markup.row(btn_minus, btn_quantity, btn_plus)
    markup.row(add_to_cart)

    return markup

def generate_cart_back():
    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

    markup.add(KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞ üõí'))
    markup.add(KeyboardButton(text='–ù–∞–∑–∞–¥ ‚¨Ö'))


    return markup

def generate_cart_inline(cart_id):
    markup = InlineKeyboardMarkup()
    back = InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚¨Ö',callback_data='back')
    clear_cart = InlineKeyboardButton('–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø–æ–ª–Ω–æ—Å—Ç—å—é üõí', callback_data='clear')
    submit_order = InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ üöñ',
                                        callback_data=f'order_{cart_id}')


    markup.row(submit_order)
    markup.row(clear_cart)
    markup.row(back)

    database = sqlite3.connect('bot_database.db')
    cursor = database.cursor()
    cursor.execute('''
    SELECT cart_product_id, product_name
    FROM cart_products
    WHERE cart_id = ?
    ''', (cart_id, ))

    cart_products = cursor.fetchall()
    database.close()

    for product_id , product_name in cart_products:
        markup.row(
            InlineKeyboardButton(text=f'‚ùå {product_name}', callback_data=f'delete_{product_id}')
        )
    return markup